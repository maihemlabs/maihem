from maihem.agents import TargetAgent, MaihemAgent
from maihem.clients import Maihem


# Create Maihem Client
maihem_client = Maihem()

# Create Target Agent
target_agent = maihem_client.create_target_agent(
    name="PG_Chatbot_1", # Name of the Target Agent, does not have to be unique
    identifier="tg_ag_1234567", # (Optional) Define unique identifier for your Target Agent, or we create one for you
    role="mental health assistant", # Enum
    industry="mental health", # Enum
    description="A chatbot for emotional support", # Free text
    language="en", # (Optional) Language of the Target Agent, default is "en"
)

target_agent = TargetAgent(config)

# or get target agent if it already exists
# target_agent = TargetAgent.get(identifier="id_1234567")

# Create Maihem Agent
maihem_agent = MaihemAgent(
    name="Maihem_Agent_1", # Name of the Maihem Agent, does not have to be unique
    metric_to_eval="helpfulness", # (Optional) Select metric to evaluate, default is "helpfulness"
    behavior_prompt="Vent about stress in the workplace.", # (Optional) Guide the behavior of the Maihem Agent with a prompt describing the workflow of the user
    # behavior_workflow={}, # (Optional) Provide a dictionary of the workflow to guide the behavior of the Maihem Agent, or use our tool to help you generate this
    # add_personality=True, # (Optional) Add personality to the agent
    turns_max=8, # (Optional) Set maximum number of turns, default is 10
)

# (Optional): Connect Maihem Agent to Target Agent
maihem_agent.connect_target_agent(target_agent)

# (Optional): Define static responses and number of static turns
maihem_agent.set_static_message_list(
    static_responses=["I'm here to help you.", "How can I support you today?"], # Optional, list of static responses, dynamic after
)

maihem_agent.set_static_n_turns(
    n=2, # Number of static responses to use from previous conversation generated by the Maihem Agent, after which dynamic responses are generated
)

# (Optional): Add documents for RAG evaluations
# Load documents that the Maihem Agent can use to generate questions for the Target Agent
maihem_agent.add_documents(paths=["./data/journaling.txt", "./data/habit-building.txt", "./data/emotional-support.txt"])

# Chat with the Maihem Agent
response = maihem_agent.chat(
    target_agent_message="Hi, how can I help you today?", # Message from the Target Agent
    contexts=["<Context 1>", "<Context 2>"], # (Optional) Pass list of contexts for RAG evaluations
)

# Get message content and evals
response.content
response.eval

# or pass callable chat function to automate entire conversation
target_agent.set_chat_function(chat_function)
maihem_agent.connect_target_agent(target_agent)
maihem_agent.generate_conversation()

# Get conversation and evals
maihem_agent.conversation
maihem_agent.evals