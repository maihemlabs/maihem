from typing import List, Tuple

from maihem.clients import Maihem

# Add API key to MAIHEM_API_KEY environment variable
# os.environ["MAIHEM_API_KEY"] = api_key
maihem_client = Maihem()

target_agent = maihem_client.create_target_agent(
    name="PG_Chatbot_1", # Name of the Target Agent, does not have to be unique
    identifier="tg_ag_1234567", # (Optional) Define unique identifier for your Target Agent, or we create one for you
    target_agent_role="mental health assistant",
    target_agent_description="A chatbot for emotional support"
)

# or get target agent if it already exists
target_agent = TargetAgent.get(identifier="id_1234567")

# Example of chat function to call your Target Agent
def chat_function(conversation_id: str, agent_maihem_message: str) -> Tuple[str, List[str]]:
    """
    Callable chat function to wrap your target agent to be tested.

    params:
    - conversation_id: unique conversation ID generated by Maihem, use it to keep track of different conversations
    - agent_maihem_msg: message from the Maihem Agent

    return:
    - agent_target_message [str] - message from your Target Agent in response to the Maihem Agent message
    - contexts [List[str]] - list of contexts (required for RAG evaluations), pass empty list if not needed
    """
    
    # The message from your Target Agent. 
    # Connect your agent here to respond to agent_maihem_message. 
    # Keep track of same or new conversations with conversation_id
    agent_target_message = "Hi, how can I help you today?"
    
    # List of contexts for RAG evaluations, pass empty list if not needed
    contexts = ["<Context 1>", "<Context 2>"] 
    
    return agent_target_message, contexts
    
# Set the chat function to the Target Agent, so we can automatically chat with your Target Agent
target_agent.set_chat_function(chat_function)

# For RAG testing, add a list of documents so Maihem can generate questions from them to evaluate your Target Agent
target_agent.add_documents(documents=["./test_data/RAG_PG_essays.pdf"])

# Create a Test
test = MaihemClient.create_test(
    name="Test PG Essays", # Name of the Test, does not have to be unique
    identifier="test_pg_essays_1234", # (Optional) Define unique identifier for the Test, or we create one for you
    eval="helpfulness", # (Optional) Select metric to evaluate, default is "helpfulness"
    workflow_prompt="Vent about stress in the workplace.", # (Optional) Guide the behavior of the Maihem Agent with a prompt describing the workflow of the user
    workflow_dict={}, # (Optional) Provide a dictionary of the workflow to guide the behavior of the Maihem Agent, or use our tool to help you generate this
    add_personality=True, # (Optional) Add personality to the agent
    turns_max=10, # (Optional) Set maximum number of turns
)

# # Create a Test Run from a Test and a Target Agent
test_run = MaihemClient.create_test_run(
    test_identifier="test_pg_essays", # The identifier of the Test you want to run
    target_agent=target_agent, # The Target Agent you want to test
    concurrent_conversations=10, # How many conversations to run concurrently
)

# Get the results of the Test Run (status and how many conversations passed or failed)
results = MaihemClient.get_test_run_result(test_run_id=test_run.id)
print(results)

# Get the conversations generated in the Test Run
conversations = MaihemClient.get_test_run_result_conversations(test_run_id=test_run.id)
print(conversations)